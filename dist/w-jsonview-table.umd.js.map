{"version":3,"file":"w-jsonview-table.umd.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/viewJsonTable.mjs"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import './viewJsonTable.css'\r\n\r\n\r\n/**\r\n * 前端通過元素展示Json資料為表格，因 [Fork: {@link https://github.com/marianoguerra/json.human.js json.human.js}] 的js與css設定無法進行模組化，自己下載來修改\r\n *\r\n * @export\r\n * @param {Object} jsonObj 輸入Json物件\r\n * @param {Element} rootElem 輸入初始化元素\r\n * @param {Object} [option={}] 輸入設定物件，預設為空物件\r\n * @param {Boolean} [option.showArrayIndex=true] 輸入是否顯示陣列指標，預設為true\r\n * @param {Boolean} [option.hyperlinks.enable=false] 輸入是否產生超連結，預設為false\r\n * @param {Array} [option.hyperlinks.keys=['url']] 輸入產生超連結之key名稱，可輸入多種key，為陣列，預設key為['url']\r\n * @param {String} [option.hyperlinks.target='_blank'] 輸入產生超連結之開啟方式，預設key為'_blank'\r\n * @param {Boolean} [option.bool.showText=false] 輸入是否將boolean顯示為文字，預設為false\r\n * @param {Object} [option.bool.text={true:'Yes',false:'No'}] 輸入將boolean顯示為文字之對應名稱，預設為{true:'Yes',false:'No'}\r\n */\r\nfunction viewJsonTable(jsonObj, rootElem, option) {\r\n    let prefixer = makePrefixer('jh')\r\n    let p = prefixer\r\n    let ARRAY = 1\r\n    let BOOL = 2\r\n    let INT = 3\r\n    let FLOAT = 4\r\n    let STRING = 5\r\n    let OBJECT = 6\r\n    let FUNCTION = 7\r\n    let UNK = 99\r\n\r\n    let STRING_CLASS_NAME = p('type-string')\r\n    let STRING_EMPTY_CLASS_NAME = p('type-string') + ' ' + p('empty')\r\n\r\n    let BOOL_TRUE_CLASS_NAME = p('type-bool-true')\r\n    let BOOL_FALSE_CLASS_NAME = p('type-bool-false')\r\n    let BOOL_IMAGE = p('type-bool-image')\r\n    let INT_CLASS_NAME = p('type-int') + ' ' + p('type-number')\r\n    let FLOAT_CLASS_NAME = p('type-float') + ' ' + p('type-number')\r\n\r\n    let OBJECT_CLASS_NAME = p('type-object')\r\n    let OBJ_KEY_CLASS_NAME = p('key') + ' ' + p('object-key')\r\n    let OBJ_VAL_CLASS_NAME = p('value') + ' ' + p('object-value')\r\n    let OBJ_EMPTY_CLASS_NAME = p('type-object') + ' ' + p('empty')\r\n\r\n    let FUNCTION_CLASS_NAME = p('type-function')\r\n\r\n    let ARRAY_KEY_CLASS_NAME = p('key') + ' ' + p('array-key')\r\n    let ARRAY_VAL_CLASS_NAME = p('value') + ' ' + p('array-value')\r\n    let ARRAY_CLASS_NAME = p('type-array')\r\n    let ARRAY_EMPTY_CLASS_NAME = p('type-array') + ' ' + p('empty')\r\n\r\n    let HYPERLINK_CLASS_NAME = p('a')\r\n\r\n    let UNKNOWN_CLASS_NAME = p('type-unk')\r\n\r\n\r\n    let indexOf = [].indexOf || function(item) {\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            if (i in this && this[i] === item) return i\r\n        } return -1\r\n    }\r\n\r\n\r\n    //Init\r\n    Init(jsonObj, rootElem, option)\r\n\r\n\r\n    /**\r\n     * Initialize\r\n     */\r\n    function Init(jsonObj, rootElem, option = {}) {\r\n\r\n        //clear\r\n        rootElem.innerHTML = ''\r\n\r\n        //add class\r\n        rootElem.classList.add('CompCssDJsonViewTable')\r\n\r\n        //render\r\n        let node = format(jsonObj, option)\r\n        rootElem.appendChild(node)\r\n\r\n    }\r\n\r\n\r\n    function makePrefixer(prefix) {\r\n        return function(name) {\r\n            return prefix + '-' + name\r\n        }\r\n    }\r\n\r\n\r\n    function isArray(obj) {\r\n        return Object.prototype.toString.call(obj) === '[object Array]'\r\n    }\r\n\r\n\r\n    function sn(tagName, className, data) {\r\n        let result = document.createElement(tagName)\r\n\r\n        result.className = className\r\n        result.appendChild(document.createTextNode('' + data))\r\n\r\n        return result\r\n    }\r\n\r\n\r\n    function scn(tagName, className, child) {\r\n        let result = document.createElement(tagName)\r\n        let i\r\n        let len\r\n\r\n        result.className = className\r\n\r\n        if (isArray(child)) {\r\n            for (i = 0, len = child.length; i < len; i += 1) {\r\n                result.appendChild(child[i])\r\n            }\r\n        }\r\n        else {\r\n            result.appendChild(child)\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n\r\n    function linkNode(child, href, target) {\r\n        let a = scn('a', HYPERLINK_CLASS_NAME, child)\r\n        a.setAttribute('href', href)\r\n        a.setAttribute('target', target)\r\n        return a\r\n    }\r\n\r\n\r\n    function getType(obj) {\r\n        let type = typeof obj\r\n\r\n        switch (type) {\r\n        case 'boolean':\r\n            return BOOL\r\n        case 'string':\r\n            return STRING\r\n        case 'number':\r\n            return (obj % 1 === 0) ? INT : FLOAT\r\n        case 'function':\r\n            return FUNCTION\r\n        default:\r\n            if (isArray(obj)) {\r\n                return ARRAY\r\n            }\r\n            else if (obj === Object(obj)) {\r\n                return OBJECT\r\n            }\r\n            else {\r\n                return UNK\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function _format(data, options, parentKey) {\r\n\r\n        let result\r\n        let container\r\n        let key\r\n        let keyNode\r\n        let valNode\r\n        let len\r\n        let childs\r\n        let tr\r\n        let value\r\n        let isEmpty = true\r\n        let type = getType(data)\r\n\r\n        // Initialized & used only in case of objects & arrays\r\n        let hyperlinksEnabled, aTarget, hyperlinkKeys\r\n\r\n        switch (type) {\r\n        case BOOL:\r\n            let boolOpt = options.bool\r\n            container = document.createElement('div')\r\n\r\n            if (boolOpt.showImage) {\r\n                let img = document.createElement('img')\r\n                img.setAttribute('class', BOOL_IMAGE)\r\n\r\n                img.setAttribute('src',\r\n                    '' + (data ? boolOpt.img.true : boolOpt.img.false))\r\n\r\n                container.appendChild(img)\r\n            }\r\n\r\n            if (boolOpt.showText) {\r\n                container.appendChild(data\r\n                    ? sn('span', BOOL_TRUE_CLASS_NAME, boolOpt.text.true)\r\n                    : sn('span', BOOL_FALSE_CLASS_NAME, boolOpt.text.false))\r\n            }\r\n\r\n            result = container\r\n            break\r\n\r\n        case STRING:\r\n            if (data === '') {\r\n                result = sn('span', STRING_EMPTY_CLASS_NAME, '(Empty Text)')\r\n            }\r\n            else {\r\n                result = sn('span', STRING_CLASS_NAME, data)\r\n            }\r\n            break\r\n        case INT:\r\n            result = sn('span', INT_CLASS_NAME, data)\r\n            break\r\n        case FLOAT:\r\n            result = sn('span', FLOAT_CLASS_NAME, data)\r\n            break\r\n        case OBJECT:\r\n            childs = []\r\n\r\n            aTarget = options.hyperlinks.target\r\n            hyperlinkKeys = options.hyperlinks.keys\r\n\r\n            // Is Hyperlink Key\r\n            hyperlinksEnabled =\r\n                    options.hyperlinks.enable &&\r\n                    hyperlinkKeys &&\r\n                    hyperlinkKeys.length > 0\r\n\r\n            for (key in data) {\r\n                isEmpty = false\r\n\r\n                value = data[key]\r\n\r\n                valNode = _format(value, options, key)\r\n                keyNode = sn('th', OBJ_KEY_CLASS_NAME, key)\r\n\r\n                if (hyperlinksEnabled &&\r\n                        typeof (value) === 'string' &&\r\n                        indexOf.call(hyperlinkKeys, key) >= 0) {\r\n\r\n                    valNode = scn('td', OBJ_VAL_CLASS_NAME, linkNode(valNode, value, aTarget))\r\n                }\r\n                else {\r\n                    valNode = scn('td', OBJ_VAL_CLASS_NAME, valNode)\r\n                }\r\n\r\n                tr = document.createElement('tr')\r\n                tr.appendChild(keyNode)\r\n                tr.appendChild(valNode)\r\n\r\n                childs.push(tr)\r\n            }\r\n\r\n            if (isEmpty) {\r\n                result = sn('span', OBJ_EMPTY_CLASS_NAME, '(Empty Object)')\r\n            }\r\n            else {\r\n                result = scn('table', OBJECT_CLASS_NAME, scn('tbody', '', childs))\r\n            }\r\n            break\r\n        case FUNCTION:\r\n            result = sn('span', FUNCTION_CLASS_NAME, data)\r\n            break\r\n        case ARRAY:\r\n            if (data.length > 0) {\r\n                childs = []\r\n                let showArrayIndices = options.showArrayIndex\r\n\r\n                aTarget = options.hyperlinks.target\r\n                hyperlinkKeys = options.hyperlinks.keys\r\n\r\n                // Hyperlink of arrays?\r\n                hyperlinksEnabled = parentKey && options.hyperlinks.enable &&\r\n                        hyperlinkKeys &&\r\n                        hyperlinkKeys.length > 0 &&\r\n                        indexOf.call(hyperlinkKeys, parentKey) >= 0\r\n\r\n                for (key = 0, len = data.length; key < len; key += 1) {\r\n\r\n                    keyNode = sn('th', ARRAY_KEY_CLASS_NAME, key)\r\n                    value = data[key]\r\n\r\n                    if (hyperlinksEnabled && typeof (value) === 'string') {\r\n                        valNode = _format(value, options, key)\r\n                        valNode = scn('td', ARRAY_VAL_CLASS_NAME, linkNode(valNode, value, aTarget))\r\n                    }\r\n                    else {\r\n                        valNode = scn('td', ARRAY_VAL_CLASS_NAME, _format(value, options, key))\r\n                    }\r\n\r\n                    tr = document.createElement('tr')\r\n\r\n                    if (showArrayIndices) {\r\n                        tr.appendChild(keyNode)\r\n                    }\r\n                    tr.appendChild(valNode)\r\n\r\n                    childs.push(tr)\r\n                }\r\n\r\n                result = scn('table', ARRAY_CLASS_NAME, scn('tbody', '', childs))\r\n            }\r\n            else {\r\n                result = sn('span', ARRAY_EMPTY_CLASS_NAME, '(Empty List)')\r\n            }\r\n            break\r\n        default:\r\n            result = sn('span', UNKNOWN_CLASS_NAME, data)\r\n            break\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n\r\n    function validateOptions(options) {\r\n        options = validateArrayIndexOption(options)\r\n        options = validateHyperlinkOptions(options)\r\n        options = validateBoolOptions(options)\r\n        // Add any more option validators here\r\n        return options\r\n    }\r\n\r\n\r\n    function validateArrayIndexOption(options) {\r\n        if (options.showArrayIndex === undefined) {\r\n            options.showArrayIndex = true\r\n        }\r\n        else {\r\n            // Force to boolean just in case\r\n            options.showArrayIndex = !!options.showArrayIndex\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n\r\n    function validateHyperlinkOptions(options) {\r\n        let hyperlinks = {\r\n            enable: false,\r\n            keys: null,\r\n            target: ''\r\n        }\r\n\r\n        if (options.hyperlinks && options.hyperlinks.enable) {\r\n            hyperlinks.enable = true\r\n\r\n            hyperlinks.keys = isArray(options.hyperlinks.keys) ? options.hyperlinks.keys : []\r\n\r\n            if (options.hyperlinks.target) {\r\n                hyperlinks.target = '' + options.hyperlinks.target\r\n            }\r\n            else {\r\n                hyperlinks.target = '_blank'\r\n            }\r\n        }\r\n\r\n        options.hyperlinks = hyperlinks\r\n\r\n        return options\r\n    }\r\n\r\n\r\n    function validateBoolOptions(options) {\r\n        if (!options.bool) {\r\n            options.bool = {\r\n                text: {\r\n                    true: 'true',\r\n                    false: 'false'\r\n                },\r\n                img: {\r\n                    true: '',\r\n                    false: ''\r\n                },\r\n                showImage: false,\r\n                showText: true\r\n            }\r\n        }\r\n        else {\r\n            let boolOptions = options.bool\r\n\r\n            // Show text if no option\r\n            if (!boolOptions.showText && !boolOptions.showImage) {\r\n                boolOptions.showImage = false\r\n                boolOptions.showText = true\r\n            }\r\n\r\n            if (boolOptions.showText) {\r\n                if (!boolOptions.text) {\r\n                    boolOptions.text = {\r\n                        true: 'true',\r\n                        false: 'false'\r\n                    }\r\n                }\r\n                else {\r\n                    let t = boolOptions.text.true\r\n                    let f = boolOptions.text.false\r\n\r\n                    if (getType(t) !== STRING || t === '') {\r\n                        boolOptions.text.true = 'true'\r\n                    }\r\n\r\n                    if (getType(f) !== STRING || f === '') {\r\n                        boolOptions.text.false = 'false'\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (boolOptions.showImage) {\r\n                if (!boolOptions.img.true && !boolOptions.img.false) {\r\n                    boolOptions.showImage = false\r\n                }\r\n            }\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n\r\n    function format(data, options) {\r\n        options = validateOptions(options || {})\r\n        let result\r\n\r\n        result = _format(data, options)\r\n        result.className = result.className + ' ' + prefixer('root')\r\n\r\n        return result\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default viewJsonTable\r\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","jsonObj","rootElem","option","isArray","obj","Object","prototype","toString","call","sn","tagName","className","data","result","scn","child","i","len","length","linkNode","href","target","a","HYPERLINK_CLASS_NAME","setAttribute","getType","_format","options","parentKey","container","key","keyNode","valNode","childs","tr","value","hyperlinksEnabled","aTarget","hyperlinkKeys","isEmpty","boolOpt","bool","showImage","img","BOOL_IMAGE","showText","BOOL_TRUE_CLASS_NAME","text","BOOL_FALSE_CLASS_NAME","STRING_EMPTY_CLASS_NAME","STRING_CLASS_NAME","INT_CLASS_NAME","FLOAT_CLASS_NAME","hyperlinks","keys","enable","OBJ_KEY_CLASS_NAME","indexOf","OBJ_VAL_CLASS_NAME","push","OBJ_EMPTY_CLASS_NAME","OBJECT_CLASS_NAME","FUNCTION_CLASS_NAME","showArrayIndices","showArrayIndex","ARRAY_KEY_CLASS_NAME","ARRAY_VAL_CLASS_NAME","ARRAY_CLASS_NAME","ARRAY_EMPTY_CLASS_NAME","UNKNOWN_CLASS_NAME","validateOptions","validateArrayIndexOption","validateHyperlinkOptions","validateBoolOptions","boolOptions","t","f","format","prefixer","prefix","name","makePrefixer","p","item","l","Init","innerHTML","classList","add","node"],"mappings":"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"}