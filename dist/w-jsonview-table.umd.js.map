{"version":3,"file":"w-jsonview-table.umd.js","sources":["../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/style-inject/dist/style-inject.es.js","../src/WJsonviewTable.mjs"],"sourcesContent":["function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import './WJsonviewTable.css'\r\n\r\n\r\n/**\r\n * 前端通過元素展示Json資料為表格，因 [Fork: {@link https://github.com/marianoguerra/json.human.js json.human.js}] 的js與css設定無法進行模組化，自己下載來修改\r\n *\r\n * @export\r\n * @param {Object} jsonObj 輸入Json物件\r\n * @param {Element} rootElem 輸入初始化元素\r\n * @param {Object} [option={}] 輸入設定物件，預設為空物件\r\n * @param {Boolean} [option.showArrayIndex=true] 輸入是否顯示陣列指標，預設為true\r\n * @param {Boolean} [option.hyperlinks.enable=false] 輸入是否產生超連結，預設為false\r\n * @param {Array} [option.hyperlinks.keys=['url']] 輸入產生超連結之key名稱，可輸入多種key，為陣列，預設key為['url']\r\n * @param {String} [option.hyperlinks.target='_blank'] 輸入產生超連結之開啟方式，預設key為'_blank'\r\n * @param {Boolean} [option.bool.showText=false] 輸入是否將boolean顯示為文字，預設為false\r\n * @param {Object} [option.bool.text={true:'Yes',false:'No'}] 輸入將boolean顯示為文字之對應名稱，預設為{true:'Yes',false:'No'}\r\n */\r\nfunction WJsonviewTable(jsonObj, rootElem, option) {\r\n    let prefixer = makePrefixer('jh')\r\n    let p = prefixer\r\n    let ARRAY = 1\r\n    let BOOL = 2\r\n    let INT = 3\r\n    let FLOAT = 4\r\n    let STRING = 5\r\n    let OBJECT = 6\r\n    let FUNCTION = 7\r\n    let UNK = 99\r\n\r\n    let STRING_CLASS_NAME = p('type-string')\r\n    let STRING_EMPTY_CLASS_NAME = p('type-string') + ' ' + p('empty')\r\n\r\n    let BOOL_TRUE_CLASS_NAME = p('type-bool-true')\r\n    let BOOL_FALSE_CLASS_NAME = p('type-bool-false')\r\n    let BOOL_IMAGE = p('type-bool-image')\r\n    let INT_CLASS_NAME = p('type-int') + ' ' + p('type-number')\r\n    let FLOAT_CLASS_NAME = p('type-float') + ' ' + p('type-number')\r\n\r\n    let OBJECT_CLASS_NAME = p('type-object')\r\n    let OBJ_KEY_CLASS_NAME = p('key') + ' ' + p('object-key')\r\n    let OBJ_VAL_CLASS_NAME = p('value') + ' ' + p('object-value')\r\n    let OBJ_EMPTY_CLASS_NAME = p('type-object') + ' ' + p('empty')\r\n\r\n    let FUNCTION_CLASS_NAME = p('type-function')\r\n\r\n    let ARRAY_KEY_CLASS_NAME = p('key') + ' ' + p('array-key')\r\n    let ARRAY_VAL_CLASS_NAME = p('value') + ' ' + p('array-value')\r\n    let ARRAY_CLASS_NAME = p('type-array')\r\n    let ARRAY_EMPTY_CLASS_NAME = p('type-array') + ' ' + p('empty')\r\n\r\n    let HYPERLINK_CLASS_NAME = p('a')\r\n\r\n    let UNKNOWN_CLASS_NAME = p('type-unk')\r\n\r\n\r\n    let indexOf = [].indexOf || function(item) {\r\n        for (let i = 0, l = this.length; i < l; i++) {\r\n            if (i in this && this[i] === item) return i\r\n        } return -1\r\n    }\r\n\r\n\r\n    //Init\r\n    Init(jsonObj, rootElem, option)\r\n\r\n\r\n    /**\r\n     * Initialize\r\n     */\r\n    function Init(jsonObj, rootElem, option = {}) {\r\n\r\n        //clear\r\n        rootElem.innerHTML = ''\r\n\r\n        //add class\r\n        rootElem.classList.add('CompCssDJsonViewTable')\r\n\r\n        //render\r\n        let node = format(jsonObj, option)\r\n        rootElem.appendChild(node)\r\n\r\n    }\r\n\r\n\r\n    function makePrefixer(prefix) {\r\n        return function(name) {\r\n            return prefix + '-' + name\r\n        }\r\n    }\r\n\r\n\r\n    function isArray(obj) {\r\n        return Object.prototype.toString.call(obj) === '[object Array]'\r\n    }\r\n\r\n\r\n    function sn(tagName, className, data) {\r\n        let result = document.createElement(tagName)\r\n\r\n        result.className = className\r\n        result.appendChild(document.createTextNode('' + data))\r\n\r\n        return result\r\n    }\r\n\r\n\r\n    function scn(tagName, className, child) {\r\n        let result = document.createElement(tagName)\r\n        let i\r\n        let len\r\n\r\n        result.className = className\r\n\r\n        if (isArray(child)) {\r\n            for (i = 0, len = child.length; i < len; i += 1) {\r\n                result.appendChild(child[i])\r\n            }\r\n        }\r\n        else {\r\n            result.appendChild(child)\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n\r\n    function linkNode(child, href, target) {\r\n        let a = scn('a', HYPERLINK_CLASS_NAME, child)\r\n        a.setAttribute('href', href)\r\n        a.setAttribute('target', target)\r\n        return a\r\n    }\r\n\r\n\r\n    function getType(obj) {\r\n        let type = typeof obj\r\n\r\n        switch (type) {\r\n        case 'boolean':\r\n            return BOOL\r\n        case 'string':\r\n            return STRING\r\n        case 'number':\r\n            return (obj % 1 === 0) ? INT : FLOAT\r\n        case 'function':\r\n            return FUNCTION\r\n        default:\r\n            if (isArray(obj)) {\r\n                return ARRAY\r\n            }\r\n            else if (obj === Object(obj)) {\r\n                return OBJECT\r\n            }\r\n            else {\r\n                return UNK\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function _format(data, options, parentKey) {\r\n\r\n        let result\r\n        let container\r\n        let key\r\n        let keyNode\r\n        let valNode\r\n        let len\r\n        let childs\r\n        let tr\r\n        let value\r\n        let isEmpty = true\r\n        let type = getType(data)\r\n\r\n        // Initialized & used only in case of objects & arrays\r\n        let hyperlinksEnabled, aTarget, hyperlinkKeys\r\n\r\n        switch (type) {\r\n        case BOOL:\r\n            let boolOpt = options.bool\r\n            container = document.createElement('div')\r\n\r\n            if (boolOpt.showImage) {\r\n                let img = document.createElement('img')\r\n                img.setAttribute('class', BOOL_IMAGE)\r\n\r\n                img.setAttribute('src',\r\n                    '' + (data ? boolOpt.img.true : boolOpt.img.false))\r\n\r\n                container.appendChild(img)\r\n            }\r\n\r\n            if (boolOpt.showText) {\r\n                container.appendChild(data\r\n                    ? sn('span', BOOL_TRUE_CLASS_NAME, boolOpt.text.true)\r\n                    : sn('span', BOOL_FALSE_CLASS_NAME, boolOpt.text.false))\r\n            }\r\n\r\n            result = container\r\n            break\r\n\r\n        case STRING:\r\n            if (data === '') {\r\n                result = sn('span', STRING_EMPTY_CLASS_NAME, '(Empty Text)')\r\n            }\r\n            else {\r\n                result = sn('span', STRING_CLASS_NAME, data)\r\n            }\r\n            break\r\n        case INT:\r\n            result = sn('span', INT_CLASS_NAME, data)\r\n            break\r\n        case FLOAT:\r\n            result = sn('span', FLOAT_CLASS_NAME, data)\r\n            break\r\n        case OBJECT:\r\n            childs = []\r\n\r\n            aTarget = options.hyperlinks.target\r\n            hyperlinkKeys = options.hyperlinks.keys\r\n\r\n            // Is Hyperlink Key\r\n            hyperlinksEnabled =\r\n                    options.hyperlinks.enable &&\r\n                    hyperlinkKeys &&\r\n                    hyperlinkKeys.length > 0\r\n\r\n            for (key in data) {\r\n                isEmpty = false\r\n\r\n                value = data[key]\r\n\r\n                valNode = _format(value, options, key)\r\n                keyNode = sn('th', OBJ_KEY_CLASS_NAME, key)\r\n\r\n                if (hyperlinksEnabled &&\r\n                        typeof (value) === 'string' &&\r\n                        indexOf.call(hyperlinkKeys, key) >= 0) {\r\n\r\n                    valNode = scn('td', OBJ_VAL_CLASS_NAME, linkNode(valNode, value, aTarget))\r\n                }\r\n                else {\r\n                    valNode = scn('td', OBJ_VAL_CLASS_NAME, valNode)\r\n                }\r\n\r\n                tr = document.createElement('tr')\r\n                tr.appendChild(keyNode)\r\n                tr.appendChild(valNode)\r\n\r\n                childs.push(tr)\r\n            }\r\n\r\n            if (isEmpty) {\r\n                result = sn('span', OBJ_EMPTY_CLASS_NAME, '(Empty Object)')\r\n            }\r\n            else {\r\n                result = scn('table', OBJECT_CLASS_NAME, scn('tbody', '', childs))\r\n            }\r\n            break\r\n        case FUNCTION:\r\n            result = sn('span', FUNCTION_CLASS_NAME, data)\r\n            break\r\n        case ARRAY:\r\n            if (data.length > 0) {\r\n                childs = []\r\n                let showArrayIndices = options.showArrayIndex\r\n\r\n                aTarget = options.hyperlinks.target\r\n                hyperlinkKeys = options.hyperlinks.keys\r\n\r\n                // Hyperlink of arrays?\r\n                hyperlinksEnabled = parentKey && options.hyperlinks.enable &&\r\n                        hyperlinkKeys &&\r\n                        hyperlinkKeys.length > 0 &&\r\n                        indexOf.call(hyperlinkKeys, parentKey) >= 0\r\n\r\n                for (key = 0, len = data.length; key < len; key += 1) {\r\n\r\n                    keyNode = sn('th', ARRAY_KEY_CLASS_NAME, key)\r\n                    value = data[key]\r\n\r\n                    if (hyperlinksEnabled && typeof (value) === 'string') {\r\n                        valNode = _format(value, options, key)\r\n                        valNode = scn('td', ARRAY_VAL_CLASS_NAME, linkNode(valNode, value, aTarget))\r\n                    }\r\n                    else {\r\n                        valNode = scn('td', ARRAY_VAL_CLASS_NAME, _format(value, options, key))\r\n                    }\r\n\r\n                    tr = document.createElement('tr')\r\n\r\n                    if (showArrayIndices) {\r\n                        tr.appendChild(keyNode)\r\n                    }\r\n                    tr.appendChild(valNode)\r\n\r\n                    childs.push(tr)\r\n                }\r\n\r\n                result = scn('table', ARRAY_CLASS_NAME, scn('tbody', '', childs))\r\n            }\r\n            else {\r\n                result = sn('span', ARRAY_EMPTY_CLASS_NAME, '(Empty List)')\r\n            }\r\n            break\r\n        default:\r\n            result = sn('span', UNKNOWN_CLASS_NAME, data)\r\n            break\r\n        }\r\n\r\n        return result\r\n    }\r\n\r\n\r\n    function validateOptions(options) {\r\n        options = validateArrayIndexOption(options)\r\n        options = validateHyperlinkOptions(options)\r\n        options = validateBoolOptions(options)\r\n        // Add any more option validators here\r\n        return options\r\n    }\r\n\r\n\r\n    function validateArrayIndexOption(options) {\r\n        if (options.showArrayIndex === undefined) {\r\n            options.showArrayIndex = true\r\n        }\r\n        else {\r\n            // Force to boolean just in case\r\n            options.showArrayIndex = !!options.showArrayIndex\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n\r\n    function validateHyperlinkOptions(options) {\r\n        let hyperlinks = {\r\n            enable: false,\r\n            keys: null,\r\n            target: ''\r\n        }\r\n\r\n        if (options.hyperlinks && options.hyperlinks.enable) {\r\n            hyperlinks.enable = true\r\n\r\n            hyperlinks.keys = isArray(options.hyperlinks.keys) ? options.hyperlinks.keys : []\r\n\r\n            if (options.hyperlinks.target) {\r\n                hyperlinks.target = '' + options.hyperlinks.target\r\n            }\r\n            else {\r\n                hyperlinks.target = '_blank'\r\n            }\r\n        }\r\n\r\n        options.hyperlinks = hyperlinks\r\n\r\n        return options\r\n    }\r\n\r\n\r\n    function validateBoolOptions(options) {\r\n        if (!options.bool) {\r\n            options.bool = {\r\n                text: {\r\n                    true: 'true',\r\n                    false: 'false'\r\n                },\r\n                img: {\r\n                    true: '',\r\n                    false: ''\r\n                },\r\n                showImage: false,\r\n                showText: true\r\n            }\r\n        }\r\n        else {\r\n            let boolOptions = options.bool\r\n\r\n            // Show text if no option\r\n            if (!boolOptions.showText && !boolOptions.showImage) {\r\n                boolOptions.showImage = false\r\n                boolOptions.showText = true\r\n            }\r\n\r\n            if (boolOptions.showText) {\r\n                if (!boolOptions.text) {\r\n                    boolOptions.text = {\r\n                        true: 'true',\r\n                        false: 'false'\r\n                    }\r\n                }\r\n                else {\r\n                    let t = boolOptions.text.true\r\n                    let f = boolOptions.text.false\r\n\r\n                    if (getType(t) !== STRING || t === '') {\r\n                        boolOptions.text.true = 'true'\r\n                    }\r\n\r\n                    if (getType(f) !== STRING || f === '') {\r\n                        boolOptions.text.false = 'false'\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (boolOptions.showImage) {\r\n                if (!boolOptions.img.true && !boolOptions.img.false) {\r\n                    boolOptions.showImage = false\r\n                }\r\n            }\r\n        }\r\n\r\n        return options\r\n    }\r\n\r\n\r\n    function format(data, options) {\r\n        options = validateOptions(options || {})\r\n        let result\r\n\r\n        result = _format(data, options)\r\n        result.className = result.className + ' ' + prefixer('root')\r\n\r\n        return result\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default WJsonviewTable\r\n"],"names":["_typeof2","obj","Symbol","_typeof3","iterator","constructor","prototype","_typeof","module","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","jsonObj","rootElem","option","prefix","prefixer","name","p","ARRAY","BOOL","INT","FLOAT","STRING","OBJECT","FUNCTION","UNK","STRING_CLASS_NAME","STRING_EMPTY_CLASS_NAME","BOOL_TRUE_CLASS_NAME","BOOL_FALSE_CLASS_NAME","BOOL_IMAGE","INT_CLASS_NAME","FLOAT_CLASS_NAME","OBJECT_CLASS_NAME","OBJ_KEY_CLASS_NAME","OBJ_VAL_CLASS_NAME","OBJ_EMPTY_CLASS_NAME","FUNCTION_CLASS_NAME","ARRAY_KEY_CLASS_NAME","ARRAY_VAL_CLASS_NAME","ARRAY_CLASS_NAME","ARRAY_EMPTY_CLASS_NAME","HYPERLINK_CLASS_NAME","UNKNOWN_CLASS_NAME","indexOf","item","i","l","this","length","isArray","Object","toString","call","sn","tagName","className","data","result","scn","child","len","linkNode","href","target","a","setAttribute","getType","innerHTML","classList","add","node","options","bool","boolOptions","showText","showImage","text","t","f","img","validateBoolOptions","hyperlinks","enable","keys","validateHyperlinkOptions","undefined","showArrayIndex","validateArrayIndexOption","validateOptions","_format","parentKey","container","key","keyNode","valNode","childs","tr","value","hyperlinksEnabled","aTarget","hyperlinkKeys","isEmpty","boolOpt","push","showArrayIndices","Init"],"mappings":"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"}